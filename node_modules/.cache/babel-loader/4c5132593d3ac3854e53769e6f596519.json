{"ast":null,"code":"import URIs from '../constants/URIs';\n/**\n  * Get Celsius weather \n  */\n// TODO: GET Weather passing params comign from front, default CELSIUS\n\nexport var getWeather = function getWeather() {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      return fetch('http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=d3888b8e4390818bf15a90c3031f5956&cnt=40&units=metric').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data, \" DATA1111111111111111\");\n        return resolve(dispatch({\n          type: 'GET_CELSIUS_DEGREES',\n          data: data\n        }));\n      }).catch(reject);\n    }).catch(function (err) {\n      throw err.message;\n    });\n  };\n};\n/**\n  * Get farenheit weather \n  */\n\nexport var getFarenheitWeather = function getFarenheitWeather() {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      return fetch('http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=d3888b8e4390818bf15a90c3031f5956&cnt=40&units=imperial').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return resolve(dispatch({\n          type: 'GET_CELSIUS_DEGREES',\n          data: data\n        }));\n      }).catch(reject);\n    }).catch(function (err) {\n      throw err.message;\n    });\n  };\n};\n/**\n  * Get Page index \n  */\n\nexport var getPageIndex = function getPageIndex() {}\n/* return dispatch => new Promise((resolve, reject) => fetch('http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=d3888b8e4390818bf15a90c3031f5956&cnt=40&units=metric')\n  .then(response => response.json())\n  .then(data => {\n    return resolve(dispatch({ type: 'GET_CELSIUS', data }));\n  }).catch(reject)).catch((err) => { throw err.message; }); */\n\n/**\n* Get Page Size \n*/\n;\nexport var getPageSize = function getPageSize() {\n  /* return dispatch => new Promise((resolve, reject) => fetch('http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=d3888b8e4390818bf15a90c3031f5956&cnt=40&units=metric')\n    .then(response => response.json())\n    .then(data => {\n      return resolve(dispatch({ type: 'GET_CELSIUS', data }));\n    }).catch(reject)).catch((err) => { throw err.message; }); */\n};","map":{"version":3,"sources":["/home/ialberdi/projects/weather/src/actions/getWeather.js"],"names":["URIs","getWeather","dispatch","Promise","resolve","reject","fetch","then","response","json","data","console","log","type","catch","err","message","getFarenheitWeather","getPageIndex","getPageSize"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AAEA;;;AAIA;;AACC,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC/B,SAAO,UAAAC,QAAQ;AAAA,WAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,aAC/BC,KAAK,CAAC,wHAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,uBAAlB;AACF,eAAON,OAAO,CAACF,QAAQ,CAAC;AAAEW,UAAAA,IAAI,EAAE,qBAAR;AAA+BH,UAAAA,IAAI,EAAJA;AAA/B,SAAD,CAAT,CAAd;AACD,OALH,EAKKI,KALL,CAKWT,MALX,CAD+B;AAAA,KAAZ,EAMCS,KAND,CAMO,UAACC,GAAD,EAAS;AAAE,YAAMA,GAAG,CAACC,OAAV;AAAoB,KANtC,CAAJ;AAAA,GAAf;AAOD,CARO;AAUR;;;;AAGC,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACtC,SAAO,UAAAf,QAAQ;AAAA,WAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,aAC/BC,KAAK,CAAC,0HAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,eAAON,OAAO,CAACF,QAAQ,CAAC;AAAEW,UAAAA,IAAI,EAAE,qBAAR;AAA+BH,UAAAA,IAAI,EAAJA;AAA/B,SAAD,CAAT,CAAd;AACD,OAJH,EAIKI,KAJL,CAIWT,MAJX,CAD+B;AAAA,KAAZ,EAKCS,KALD,CAKO,UAACC,GAAD,EAAS;AAAE,YAAMA,GAAG,CAACC,OAAV;AAAoB,KALtC,CAAJ;AAAA,GAAf;AAMD,CAPK;AAUR;;;;AAGC,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM,CAMhC;AALC;;;;;;AAOF;;;AARM;AAWP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC9B;;;;;AAKD,CANK","sourcesContent":["import URIs from '../constants/URIs';\n\n/**\n  * Get Celsius weather \n  */\n\n// TODO: GET Weather passing params comign from front, default CELSIUS\n export const getWeather = () => {\n  return dispatch => new Promise((resolve, reject) => \n  fetch('http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=d3888b8e4390818bf15a90c3031f5956&cnt=40&units=metric')\n    .then(response => response.json())\n    .then(data => {\n        console.log(data, \" DATA1111111111111111\");\n      return resolve(dispatch({ type: 'GET_CELSIUS_DEGREES', data }));\n    }).catch(reject)).catch((err) => { throw err.message; });\n}\n\n/**\n  * Get farenheit weather \n  */\n export const getFarenheitWeather = () => {\n    return dispatch => new Promise((resolve, reject) => \n    fetch('http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=d3888b8e4390818bf15a90c3031f5956&cnt=40&units=imperial')\n      .then(response => response.json())\n      .then(data => {\n        return resolve(dispatch({ type: 'GET_CELSIUS_DEGREES', data }));\n      }).catch(reject)).catch((err) => { throw err.message; });\n  }\n\n\n/**\n  * Get Page index \n  */\n export const getPageIndex = () => {\n    /* return dispatch => new Promise((resolve, reject) => fetch('http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=d3888b8e4390818bf15a90c3031f5956&cnt=40&units=metric')\n      .then(response => response.json())\n      .then(data => {\n        return resolve(dispatch({ type: 'GET_CELSIUS', data }));\n      }).catch(reject)).catch((err) => { throw err.message; }); */\n  }\n\n  /**\n  * Get Page Size \n  */\n export const getPageSize = () => {\n    /* return dispatch => new Promise((resolve, reject) => fetch('http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=d3888b8e4390818bf15a90c3031f5956&cnt=40&units=metric')\n      .then(response => response.json())\n      .then(data => {\n        return resolve(dispatch({ type: 'GET_CELSIUS', data }));\n      }).catch(reject)).catch((err) => { throw err.message; }); */\n  }"]},"metadata":{},"sourceType":"module"}