{"ast":null,"code":"import _classCallCheck from \"/home/ialberdi/projects/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/ialberdi/projects/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ialberdi/projects/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ialberdi/projects/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ialberdi/projects/weather/src/containers/Weather.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getWeather } from '../actions/getWeather';\n\nvar WeatherContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherContainer, _Component);\n\n  function WeatherContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WeatherContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WeatherContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      error: null,\n      loading: false\n    };\n\n    _this.componentDidMount = function () {\n      return _this.fetchData();\n    };\n\n    _this.fetchData = function (data) {\n      console.log(data, \" DTAAAAAAAAAAAAAA\");\n      var fetchWeather = _this.props.fetchWeather;\n\n      _this.setState({\n        loading: true\n      });\n\n      return fetchWeather(data).then(function () {\n        return _this.setState({\n          loading: false,\n          error: null\n        });\n      }).catch(function (err) {\n        return _this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n\n    _this.render = function () {\n      var _this$props = _this.props,\n          Layout = _this$props.Layout,\n          weather = _this$props.weather,\n          match = _this$props.match;\n      var _this$state = _this.state,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      var id = match && match.params && match.params.id ? match.params.id : null;\n      return React.createElement(Layout //redditId={id}\n      //error={error}\n      , {\n        loading: loading,\n        weather: weather //reFetch={() => this.fetchData()} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  return WeatherContainer;\n}(Component);\n\nWeatherContainer.propTypes = {\n  Layout: PropTypes.func.isRequired,\n  weather: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({})\n  }),\n  fetchWeather: PropTypes.func.isRequired\n};\nWeatherContainer.defaultProps = {\n  match: null\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    weather: state.weather.weather || {}\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchWeather: getWeather\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherContainer);","map":{"version":3,"sources":["/home/ialberdi/projects/weather/src/containers/Weather.js"],"names":["React","Component","PropTypes","connect","getWeather","WeatherContainer","state","error","loading","componentDidMount","fetchData","data","console","log","fetchWeather","props","setState","then","catch","err","render","Layout","weather","match","id","params","propTypes","func","isRequired","arrayOf","shape","defaultProps","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,uBAA3B;;IAEMC,gB;;;;;;;;;;;;;;;;;UAYJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,OAAO,EAAE;AAFH,K;;UAKRC,iB,GAAoB;AAAA,aAAM,MAAKC,SAAL,EAAN;AAAA,K;;UAEpBA,S,GAAY,UAACC,IAAD,EAAU;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,mBAAlB;AADoB,UAEZG,YAFY,GAEK,MAAKC,KAFV,CAEZD,YAFY;;AAIpB,YAAKE,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,aAAOM,YAAY,CAACH,IAAD,CAAZ,CACJM,IADI,CACC;AAAA,eAAM,MAAKD,QAAL,CAAc;AACxBR,UAAAA,OAAO,EAAE,KADe;AAExBD,UAAAA,KAAK,EAAE;AAFiB,SAAd,CAAN;AAAA,OADD,EAIDW,KAJC,CAIK,UAAAC,GAAG;AAAA,eAAI,MAAKH,QAAL,CAAc;AAC7BR,UAAAA,OAAO,EAAE,KADoB;AAE7BD,UAAAA,KAAK,EAAEY;AAFsB,SAAd,CAAJ;AAAA,OAJR,CAAP;AAQD,K;;UAEDC,M,GAAS,YAAM;AAAA,wBACsB,MAAKL,KAD3B;AAAA,UACLM,MADK,eACLA,MADK;AAAA,UACGC,OADH,eACGA,OADH;AAAA,UACYC,KADZ,eACYA,KADZ;AAAA,wBAEc,MAAKjB,KAFnB;AAAA,UAELE,OAFK,eAELA,OAFK;AAAA,UAEID,KAFJ,eAEIA,KAFJ;AAGb,UAAMiB,EAAE,GAAID,KAAK,IAAIA,KAAK,CAACE,MAAf,IAAyBF,KAAK,CAACE,MAAN,CAAaD,EAAvC,GAA6CD,KAAK,CAACE,MAAN,CAAaD,EAA1D,GAA+D,IAA1E;AACA,aACE,oBAAC,MAAD,CACE;AACA;AAFF;AAGE,QAAA,OAAO,EAAEhB,OAHX;AAIE,QAAA,OAAO,EAAEc,OAJX,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,K;;;;;;EAhD4BrB,S;;AAAzBI,gB,CACGqB,S,GAAY;AACjBL,EAAAA,MAAM,EAAEnB,SAAS,CAACyB,IAAV,CAAeC,UADN;AAEjBN,EAAAA,OAAO,EAAEpB,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAAC4B,KAAV,EAAlB,EAAqCF,UAF7B;AAGjBL,EAAAA,KAAK,EAAErB,SAAS,CAAC4B,KAAV,CAAgB;AAAEL,IAAAA,MAAM,EAAEvB,SAAS,CAAC4B,KAAV,CAAgB,EAAhB;AAAV,GAAhB,CAHU;AAIjBhB,EAAAA,YAAY,EAAEZ,SAAS,CAACyB,IAAV,CAAeC;AAJZ,C;AADfvB,gB,CAQG0B,Y,GAAe;AACpBR,EAAAA,KAAK,EAAE;AADa,C;;AA2CxB,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAAA1B,KAAK;AAAA,SAAK;AAChCgB,IAAAA,OAAO,EAAEhB,KAAK,CAACgB,OAAN,CAAcA,OAAd,IAAyB;AADF,GAAL;AAAA,CAA7B;;AAIA,IAAMW,kBAAkB,GAAG;AACzBnB,EAAAA,YAAY,EAAEV;AADW,CAA3B;AAIA,eAAeD,OAAO,CAAC6B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C5B,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getWeather } from '../actions/getWeather';\n\nclass WeatherContainer extends Component {\n  static propTypes = {\n    Layout: PropTypes.func.isRequired,\n    weather: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n    match: PropTypes.shape({ params: PropTypes.shape({}) }),\n    fetchWeather: PropTypes.func.isRequired\n  }\n\n  static defaultProps = {\n    match: null,\n  }\n\n  state = {\n    error: null,\n    loading: false\n  }\n\n  componentDidMount = () => this.fetchData();\n\n  fetchData = (data) => {\n    console.log(data, \" DTAAAAAAAAAAAAAA\");\n    const { fetchWeather } = this.props;\n\n    this.setState({ loading: true });\n\n    return fetchWeather(data)\n      .then(() => this.setState({\n        loading: false,\n        error: null,\n      })).catch(err => this.setState({\n        loading: false,\n        error: err,\n      }));\n  }\n\n  render = () => {\n    const { Layout, weather, match } = this.props;\n    const { loading, error } = this.state;\n    const id = (match && match.params && match.params.id) ? match.params.id : null;\n    return (\n      <Layout\n        //redditId={id}\n        //error={error}\n        loading={loading}\n        weather={weather}\n        //reFetch={() => this.fetchData()} \n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  weather: state.weather.weather || {},\n});\n\nconst mapDispatchToProps = {\n  fetchWeather: getWeather,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherContainer);\n"]},"metadata":{},"sourceType":"module"}