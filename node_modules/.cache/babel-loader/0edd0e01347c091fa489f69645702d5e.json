{"ast":null,"code":"/* global window */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/es/storage';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\nvar reduxPersistConfig = {\n  key: 'root',\n  storage: storage,\n  blacklist: []\n};\nvar reducer = persistCombineReducers(reduxPersistConfig, reducers);\nvar middleware = [thunk];\n\nvar configureStore = function configureStore() {\n  // Allows us to use redux devtools when it exists\n  var composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  var store = createStore(reducer, composeEnhancer(applyMiddleware.apply(void 0, middleware)));\n  var persistor = persistStore(store, null, function () {\n    store.getState();\n  });\n  return {\n    persistor: persistor,\n    store: store\n  };\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/home/ialberdi/projects/weather/src/store/index.js"],"names":["createStore","applyMiddleware","compose","persistStore","persistCombineReducers","storage","thunk","reducers","reduxPersistConfig","key","blacklist","reducer","middleware","configureStore","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor","getState"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,sBAAvB,QAAqD,eAArD;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,IAAMC,kBAAkB,GAAG;AAAEC,EAAAA,GAAG,EAAE,MAAP;AAAeJ,EAAAA,OAAO,EAAPA,OAAf;AAAwBK,EAAAA,SAAS,EAAE;AAAnC,CAA3B;AAEA,IAAMC,OAAO,GAAGP,sBAAsB,CAACI,kBAAD,EAAqBD,QAArB,CAAtC;AAEA,IAAMK,UAAU,GAAG,CAACN,KAAD,CAAnB;;AAEA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B;AACA,MAAMC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+Cd,OAAvE;AAEA,MAAMe,KAAK,GAAGjB,WAAW,CAACW,OAAD,EAAUG,eAAe,CAACb,eAAe,MAAf,SAAmBW,UAAnB,CAAD,CAAzB,CAAzB;AACA,MAAMM,SAAS,GAAGf,YAAY,CAACc,KAAD,EAAQ,IAAR,EAAc,YAAM;AAAEA,IAAAA,KAAK,CAACE,QAAN;AAAmB,GAAzC,CAA9B;AAEA,SAAO;AAAED,IAAAA,SAAS,EAATA,SAAF;AAAaD,IAAAA,KAAK,EAALA;AAAb,GAAP;AACD,CARD;;AAUA,eAAeJ,cAAf","sourcesContent":["/* global window */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/es/storage';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\n\nconst reduxPersistConfig = { key: 'root', storage, blacklist: [] };\n\nconst reducer = persistCombineReducers(reduxPersistConfig, reducers);\n\nconst middleware = [thunk];\n\nconst configureStore = () => {\n  // Allows us to use redux devtools when it exists\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(reducer, composeEnhancer(applyMiddleware(...middleware)));\n  const persistor = persistStore(store, null, () => { store.getState(); });\n\n  return { persistor, store };\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}