{"ast":null,"code":"import weather from './weather';\n\nvar rehydrated = function rehydrated() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'persist/REHYDRATE':\n      return true;\n\n    default:\n      return state;\n  }\n};\n\nexport default {\n  rehydrated: rehydrated,\n  weather: weather\n};","map":{"version":3,"sources":["/home/ialberdi/projects/weather/src/reducers/index.js"],"names":["weather","rehydrated","state","action","type"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOF,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAe;AACbD,EAAAA,UAAU,EAAVA,UADa;AAEbD,EAAAA,OAAO,EAAPA;AAFa,CAAf","sourcesContent":["import weather from './weather';\n\nconst rehydrated = (state = false, action) => {\n  switch (action.type) {\n    case 'persist/REHYDRATE':\n      return true;\n    default:\n      return state;\n  }\n};\n\nexport default {\n  rehydrated,\n  weather,\n};\n"]},"metadata":{},"sourceType":"module"}