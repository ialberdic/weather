{"ast":null,"code":"import _toConsumableArray from \"/home/ialberdi/projects/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/ialberdi/projects/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/ialberdi/projects/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/ialberdi/projects/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ialberdi/projects/weather/src/web/hooks/useChartConfig.js\";\nimport React from 'react'; //\n\nvar options = {\n  elementType: ['line', 'area', 'bar', 'bubble'],\n  primaryAxisType: ['linear', 'time', 'log', 'ordinal'],\n  secondaryAxisType: ['linear', 'time', 'log', 'ordinal'],\n  primaryAxisPosition: ['top', 'left', 'right', 'bottom'],\n  secondaryAxisPosition: ['top', 'left', 'right', 'bottom'],\n  secondaryAxisStack: [true, false],\n  primaryAxisShow: [true, false],\n  secondaryAxisShow: [true, false],\n  grouping: ['single', 'series', 'primary', 'secondary'],\n  tooltipAnchor: ['closest', 'top', 'bottom', 'left', 'right', 'center', 'gridTop', 'gridBottom', 'gridLeft', 'gridRight', 'gridCenter', 'pointer'],\n  tooltipAlign: ['auto', 'top', 'bottom', 'left', 'right', 'topLeft', 'topRight', 'bottomLeft', 'bottomRight', 'center'],\n  snapCursor: [true, false]\n};\nvar optionKeys = Object.keys(options);\nexport default function useChartConfig(_ref) {\n  var series = _ref.series,\n      useR = _ref.useR,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? [] : _ref$show,\n      _ref$count = _ref.count,\n      count = _ref$count === void 0 ? 1 : _ref$count,\n      _ref$resizable = _ref.resizable,\n      resizable = _ref$resizable === void 0 ? true : _ref$resizable,\n      _ref$canRandomize = _ref.canRandomize,\n      canRandomize = _ref$canRandomize === void 0 ? true : _ref$canRandomize,\n      _ref$dataType = _ref.dataType,\n      dataType = _ref$dataType === void 0 ? 'time' : _ref$dataType,\n      _ref$elementType = _ref.elementType,\n      elementType = _ref$elementType === void 0 ? 'line' : _ref$elementType,\n      _ref$primaryAxisType = _ref.primaryAxisType,\n      primaryAxisType = _ref$primaryAxisType === void 0 ? 'time' : _ref$primaryAxisType,\n      _ref$secondaryAxisTyp = _ref.secondaryAxisType,\n      secondaryAxisType = _ref$secondaryAxisTyp === void 0 ? 'linear' : _ref$secondaryAxisTyp,\n      _ref$primaryAxisPosit = _ref.primaryAxisPosition,\n      primaryAxisPosition = _ref$primaryAxisPosit === void 0 ? 'bottom' : _ref$primaryAxisPosit,\n      _ref$secondaryAxisPos = _ref.secondaryAxisPosition,\n      secondaryAxisPosition = _ref$secondaryAxisPos === void 0 ? 'left' : _ref$secondaryAxisPos,\n      _ref$primaryAxisStack = _ref.primaryAxisStack,\n      primaryAxisStack = _ref$primaryAxisStack === void 0 ? false : _ref$primaryAxisStack,\n      _ref$secondaryAxisSta = _ref.secondaryAxisStack,\n      secondaryAxisStack = _ref$secondaryAxisSta === void 0 ? true : _ref$secondaryAxisSta,\n      _ref$primaryAxisShow = _ref.primaryAxisShow,\n      primaryAxisShow = _ref$primaryAxisShow === void 0 ? true : _ref$primaryAxisShow,\n      _ref$secondaryAxisSho = _ref.secondaryAxisShow,\n      secondaryAxisShow = _ref$secondaryAxisSho === void 0 ? true : _ref$secondaryAxisSho,\n      _ref$tooltipAnchor = _ref.tooltipAnchor,\n      tooltipAnchor = _ref$tooltipAnchor === void 0 ? 'closest' : _ref$tooltipAnchor,\n      _ref$tooltipAlign = _ref.tooltipAlign,\n      tooltipAlign = _ref$tooltipAlign === void 0 ? 'auto' : _ref$tooltipAlign,\n      _ref$grouping = _ref.grouping,\n      grouping = _ref$grouping === void 0 ? 'primary' : _ref$grouping,\n      _ref$snapCursor = _ref.snapCursor,\n      snapCursor = _ref$snapCursor === void 0 ? true : _ref$snapCursor,\n      _ref$datums = _ref.datums,\n      datums = _ref$datums === void 0 ? 10 : _ref$datums;\n\n  var _React$useState = React.useState({\n    count: count,\n    resizable: resizable,\n    canRandomize: canRandomize,\n    dataType: dataType,\n    elementType: elementType,\n    primaryAxisType: primaryAxisType,\n    secondaryAxisType: secondaryAxisType,\n    primaryAxisPosition: primaryAxisPosition,\n    secondaryAxisPosition: secondaryAxisPosition,\n    primaryAxisStack: primaryAxisStack,\n    secondaryAxisStack: secondaryAxisStack,\n    primaryAxisShow: primaryAxisShow,\n    secondaryAxisShow: secondaryAxisShow,\n    tooltipAnchor: tooltipAnchor,\n    tooltipAlign: tooltipAlign,\n    grouping: grouping,\n    snapCursor: snapCursor,\n    datums: datums,\n    data: makeDataFrom(dataType, series, useR, datums)\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setState(function (old) {\n      return _objectSpread({}, old, {\n        data: makeDataFrom(dataType, series, useR, datums)\n      });\n    });\n  }, [count, dataType, datums, series, useR]);\n\n  var randomizeData = function randomizeData() {\n    return setState(function (old) {\n      return _objectSpread({}, old, {\n        data: makeDataFrom(dataType, series, useR, datums)\n      });\n    });\n  };\n\n  var Options = optionKeys.filter(function (option) {\n    return show.indexOf(option) > -1;\n  }).map(function (option) {\n    return React.createElement(\"div\", {\n      key: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, option, \": \\xA0\", React.createElement(\"select\", {\n      value: state[option],\n      onChange: function onChange(_ref2) {\n        var value = _ref2.target.value;\n        return setState(function (old) {\n          return _objectSpread({}, old, _defineProperty({}, option, typeof options[option][0] === 'boolean' ? value === 'true' : value));\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, options[option].map(function (d) {\n      return React.createElement(\"option\", {\n        value: d,\n        key: d.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, d.toString());\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  });\n  return _objectSpread({}, state, {\n    randomizeData: randomizeData,\n    Options: Options\n  });\n}\n\nfunction makeDataFrom(dataType, series, useR, datums) {\n  return _toConsumableArray(new Array(series || Math.max(Math.round(Math.random() * 5), 1))).map(function (d, i) {\n    return makeSeries(i, dataType, useR, datums);\n  });\n}\n\nfunction makeSeries(i, dataType, useR, datums) {\n  var start = 0;\n  var startDate = new Date();\n  startDate.setMinutes(0);\n  startDate.setSeconds(0);\n  startDate.setMilliseconds(0); // const length = 5 + Math.round(Math.random() * 15)\n\n  var length = datums;\n  var min = 0;\n  var max = 100;\n  var rMin = 2;\n  var rMax = 20;\n  var nullChance = 0;\n  return {\n    label: \"Series \".concat(i + 1),\n    datums: _toConsumableArray(new Array(length)).map(function (_, i) {\n      var x = start + i;\n\n      if (dataType === 'ordinal') {\n        x = \"Ordinal Group \".concat(x);\n      }\n\n      if (dataType === 'time') {\n        x = new Date(startDate.getTime() + 60 * 1000 * 30 * i);\n      }\n\n      if (dataType === 'linear') {\n        x = Math.random() < nullChance ? null : min + Math.round(Math.random() * (max - min));\n      }\n\n      var distribution = 1.1;\n      var y = Math.random() < nullChance ? null : min + Math.round(Math.random() * (max - min));\n      var r = !useR ? undefined : rMax - Math.floor(Math.log(Math.random() * (Math.pow(distribution, rMax) - rMin) + rMin) / Math.log(distribution));\n      return {\n        x: x,\n        y: y,\n        r: r\n      };\n    })\n  };\n}","map":{"version":3,"sources":["/home/ialberdi/projects/weather/src/web/hooks/useChartConfig.js"],"names":["React","options","elementType","primaryAxisType","secondaryAxisType","primaryAxisPosition","secondaryAxisPosition","secondaryAxisStack","primaryAxisShow","secondaryAxisShow","grouping","tooltipAnchor","tooltipAlign","snapCursor","optionKeys","Object","keys","useChartConfig","series","useR","show","count","resizable","canRandomize","dataType","primaryAxisStack","datums","useState","data","makeDataFrom","state","setState","useEffect","old","randomizeData","Options","filter","option","indexOf","map","value","target","d","toString","Array","Math","max","round","random","i","makeSeries","start","startDate","Date","setMinutes","setSeconds","setMilliseconds","length","min","rMin","rMax","nullChance","label","_","x","getTime","distribution","y","r","undefined","floor","log"],"mappings":"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","sourcesContent":["import React from 'react'\n//\n\nconst options = {\n  elementType: ['line', 'area', 'bar', 'bubble'],\n  primaryAxisType: ['linear', 'time', 'log', 'ordinal'],\n  secondaryAxisType: ['linear', 'time', 'log', 'ordinal'],\n  primaryAxisPosition: ['top', 'left', 'right', 'bottom'],\n  secondaryAxisPosition: ['top', 'left', 'right', 'bottom'],\n  secondaryAxisStack: [true, false],\n  primaryAxisShow: [true, false],\n  secondaryAxisShow: [true, false],\n  grouping: ['single', 'series', 'primary', 'secondary'],\n  tooltipAnchor: [\n    'closest',\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'center',\n    'gridTop',\n    'gridBottom',\n    'gridLeft',\n    'gridRight',\n    'gridCenter',\n    'pointer'\n  ],\n  tooltipAlign: [\n    'auto',\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'topLeft',\n    'topRight',\n    'bottomLeft',\n    'bottomRight',\n    'center'\n  ],\n  snapCursor: [true, false]\n}\n\nconst optionKeys = Object.keys(options)\n\nexport default function useChartConfig({\n  series,\n  useR,\n  show = [],\n  count = 1,\n  resizable = true,\n  canRandomize = true,\n  dataType = 'time',\n  elementType = 'line',\n  primaryAxisType = 'time',\n  secondaryAxisType = 'linear',\n  primaryAxisPosition = 'bottom',\n  secondaryAxisPosition = 'left',\n  primaryAxisStack = false,\n  secondaryAxisStack = true,\n  primaryAxisShow = true,\n  secondaryAxisShow = true,\n  tooltipAnchor = 'closest',\n  tooltipAlign = 'auto',\n  grouping = 'primary',\n  snapCursor = true,\n  datums = 10\n}) {\n  const [state, setState] = React.useState({\n    count,\n    resizable,\n    canRandomize,\n    dataType,\n    elementType,\n    primaryAxisType,\n    secondaryAxisType,\n    primaryAxisPosition,\n    secondaryAxisPosition,\n    primaryAxisStack,\n    secondaryAxisStack,\n    primaryAxisShow,\n    secondaryAxisShow,\n    tooltipAnchor,\n    tooltipAlign,\n    grouping,\n    snapCursor,\n    datums,\n    data: makeDataFrom(dataType, series, useR, datums)\n  })\n\n  React.useEffect(() => {\n    setState(old => ({\n      ...old,\n      data: makeDataFrom(dataType, series, useR, datums)\n    }))\n  }, [count, dataType, datums, series, useR])\n\n  const randomizeData = () =>\n    setState(old => ({\n      ...old,\n      data: makeDataFrom(dataType, series, useR, datums)\n    }))\n\n  const Options = optionKeys\n    .filter(option => show.indexOf(option) > -1)\n    .map(option => (\n      <div key={option}>\n        {option}: &nbsp;\n        <select\n          value={state[option]}\n          onChange={({ target: { value } }) =>\n            setState(old => ({\n              ...old,\n              [option]:\n                typeof options[option][0] === 'boolean'\n                  ? value === 'true'\n                  : value\n            }))\n          }\n        >\n          {options[option].map(d => (\n            <option value={d} key={d.toString()}>\n              {d.toString()}\n            </option>\n          ))}\n        </select>\n        <br />\n      </div>\n    ))\n\n  return {\n    ...state,\n    randomizeData,\n    Options\n  }\n}\n\nfunction makeDataFrom(dataType, series, useR, datums) {\n  return [\n    ...new Array(series || Math.max(Math.round(Math.random() * 5), 1))\n  ].map((d, i) => makeSeries(i, dataType, useR, datums))\n}\n\nfunction makeSeries(i, dataType, useR, datums) {\n  const start = 0\n  const startDate = new Date()\n  startDate.setMinutes(0)\n  startDate.setSeconds(0)\n  startDate.setMilliseconds(0)\n  // const length = 5 + Math.round(Math.random() * 15)\n  const length = datums\n  const min = 0\n  const max = 100\n  const rMin = 2\n  const rMax = 20\n  const nullChance = 0\n  return {\n    label: `Series ${i + 1}`,\n    datums: [...new Array(length)].map((_, i) => {\n      let x = start + i\n      if (dataType === 'ordinal') {\n        x = `Ordinal Group ${x}`\n      }\n      if (dataType === 'time') {\n        x = new Date(startDate.getTime() + 60 * 1000 * 30 * i)\n      }\n      if (dataType === 'linear') {\n        x =\n          Math.random() < nullChance\n            ? null\n            : min + Math.round(Math.random() * (max - min))\n      }\n      const distribution = 1.1\n      const y =\n        Math.random() < nullChance\n          ? null\n          : min + Math.round(Math.random() * (max - min))\n      const r = !useR\n        ? undefined\n        : rMax -\n          Math.floor(\n            Math.log(Math.random() * (distribution ** rMax - rMin) + rMin) /\n              Math.log(distribution)\n          )\n      return {\n        x,\n        y,\n        r\n      }\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}