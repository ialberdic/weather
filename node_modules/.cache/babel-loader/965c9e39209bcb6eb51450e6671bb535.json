{"ast":null,"code":"var _jsxFileName = \"/home/ialberdi/projects/weather/src/web/forms/Test.js\";\nimport React from 'react';\nimport { Chart } from 'react-charts';\nimport useChartConfig from '../hooks/useChartConfig';\nimport Box from './Box';\nvar sourceCode;\nexport default (function () {\n  var _useChartConfig = useChartConfig({\n    series: 10,\n    dataType: 'ordinal'\n  }),\n      data = _useChartConfig.data,\n      randomizeData = _useChartConfig.randomizeData;\n\n  var series = React.useMemo(function () {\n    return {\n      type: 'bar'\n    };\n  }, []);\n  var axes = React.useMemo(function () {\n    return [{\n      primary: true,\n      position: 'bottom',\n      type: 'ordinal'\n    }, {\n      position: 'left',\n      type: 'linear',\n      stacked: true\n    }];\n  }, []);\n  var tooltip = React.useMemo(function () {\n    return {\n      render: function render(_ref) {\n        var datum = _ref.datum,\n            primaryAxis = _ref.primaryAxis,\n            getStyle = _ref.getStyle;\n        return React.createElement(CustomTooltip, Object.assign({\n          getStyle: getStyle,\n          primaryAxis: primaryAxis,\n          datum: datum\n        }, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }));\n      }\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: randomizeData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Randomize Data\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    data: data,\n    series: series,\n    axes: axes,\n    primaryCursor: true,\n    tooltip: tooltip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, sourceCode)));\n});\n\nfunction CustomTooltip(_ref2) {\n  var getStyle = _ref2.getStyle,\n      primaryAxis = _ref2.primaryAxis,\n      datum = _ref2.datum;\n  var data = React.useMemo(function () {\n    return datum ? [{\n      data: datum.group.map(function (d) {\n        return {\n          primary: d.series.label,\n          secondary: d.secondary,\n          color: getStyle(d).fill\n        };\n      })\n    }] : [];\n  }, [datum, getStyle]);\n  return datum ? React.createElement(\"div\", {\n    style: {\n      color: 'white',\n      pointerEvents: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: {\n      display: 'block',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, primaryAxis.format(datum.primary)), React.createElement(\"div\", {\n    style: {\n      width: '300px',\n      height: '200px',\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    data: data,\n    dark: true,\n    series: {\n      type: 'bar'\n    },\n    axes: [{\n      primary: true,\n      position: 'bottom',\n      type: 'ordinal'\n    }, {\n      position: 'left',\n      type: 'linear'\n    }],\n    getDatumStyle: function getDatumStyle(datum) {\n      return {\n        color: datum.originalDatum.color\n      };\n    },\n    primaryCursor: {\n      value: datum.seriesLabel\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))) : null;\n}","map":{"version":3,"sources":["/home/ialberdi/projects/weather/src/web/forms/Test.js"],"names":["React","Chart","useChartConfig","Box","sourceCode","series","dataType","data","randomizeData","useMemo","type","axes","primary","position","stacked","tooltip","render","datum","primaryAxis","getStyle","CustomTooltip","group","map","d","label","secondary","color","fill","pointerEvents","display","textAlign","format","width","height","originalDatum","value","seriesLabel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Chart } from 'react-charts';\nimport useChartConfig from '../hooks/useChartConfig'\nimport Box from './Box'\n\nlet sourceCode\nexport default () => {\n  const { data, randomizeData } = useChartConfig({\n    series: 10,\n    dataType: 'ordinal'\n  })\n  const series = React.useMemo(() => ({ type: 'bar' }), [])\n  const axes = React.useMemo(\n    () => [\n      { primary: true, position: 'bottom', type: 'ordinal' },\n      { position: 'left', type: 'linear', stacked: true }\n    ],\n    []\n  )\n  const tooltip = React.useMemo(\n    () => ({\n      render: ({ datum, primaryAxis, getStyle }) => {\n        return <CustomTooltip {...{ getStyle, primaryAxis, datum }} />\n      }\n    }),\n    []\n  )\n  return (\n    <>\n      <button onClick={randomizeData}>Randomize Data</button>\n      <br />\n      <br />\n      <Box>\n        <Chart\n          data={data}\n          series={series}\n          axes={axes}\n          primaryCursor\n          tooltip={tooltip}\n        />\n      </Box>\n      <br />\n      <pre>\n        <code>{sourceCode}</code>\n      </pre>\n    </>\n  )\n}\nfunction CustomTooltip({ getStyle, primaryAxis, datum }) {\n  const data = React.useMemo(\n    () =>\n      datum\n        ? [\n            {\n              data: datum.group.map(d => ({\n                primary: d.series.label,\n                secondary: d.secondary,\n                color: getStyle(d).fill\n              }))\n            }\n          ]\n        : [],\n    [datum, getStyle]\n  )\n  return datum ? (\n    <div\n      style={{\n        color: 'white',\n        pointerEvents: 'none'\n      }}\n    >\n      <h3\n        style={{\n          display: 'block',\n          textAlign: 'center'\n        }}\n      >\n        {primaryAxis.format(datum.primary)}\n      </h3>\n      <div\n        style={{\n          width: '300px',\n          height: '200px',\n          display: 'flex'\n        }}\n      >\n        <Chart\n          data={data}\n          dark\n          series={{ type: 'bar' }}\n          axes={[\n            {\n              primary: true,\n              position: 'bottom',\n              type: 'ordinal'\n            },\n            {\n              position: 'left',\n              type: 'linear'\n            }\n          ]}\n          getDatumStyle={datum => ({\n            color: datum.originalDatum.color\n          })}\n          primaryCursor={{\n            value: datum.seriesLabel\n          }}\n        />\n      </div>\n    </div>\n  ) : null\n}"]},"metadata":{},"sourceType":"module"}