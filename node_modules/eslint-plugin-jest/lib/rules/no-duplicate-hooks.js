"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("./util");

const newHookContext = () => ({
  beforeAll: 0,
  beforeEach: 0,
  afterAll: 0,
  afterEach: 0
});

var _default = {
  meta: {
    docs: {
      url: (0, _util.getDocsUrl)(__filename)
    },
    messages: {
      noDuplicateHook: 'Duplicate {{hook}} in describe block'
    }
  },

  create(context) {
    const hookContexts = [newHookContext()];
    return {
      CallExpression(node) {
        if ((0, _util.isDescribe)(node)) {
          hookContexts.push(newHookContext());
        }

        if ((0, _util.isHook)(node)) {
          const currentLayer = hookContexts[hookContexts.length - 1];
          currentLayer[node.callee.name] += 1;

          if (currentLayer[node.callee.name] > 1) {
            context.report({
              messageId: 'noDuplicateHook',
              data: {
                hook: node.callee.name
              },
              node
            });
          }
        }
      },

      'CallExpression:exit'(node) {
        if ((0, _util.isDescribe)(node)) {
          hookContexts.pop();
        }
      }

    };
  }

};
exports.default = _default;