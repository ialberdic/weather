"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("./util");

var _default = {
  meta: {
    docs: {
      url: (0, _util.getDocsUrl)(__filename)
    },
    messages: {
      toMatch: 'Use toMatchInlineSnapshot() instead',
      toMatchError: 'Use toThrowErrorMatchingInlineSnapshot() instead'
    },
    fixable: 'code',
    schema: []
  },

  create(context) {
    return {
      CallExpression(node) {
        const propertyName = node.callee.property && node.callee.property.name;

        if (propertyName === 'toMatchSnapshot') {
          context.report({
            fix(fixer) {
              return [fixer.replaceText(node.callee.property, 'toMatchInlineSnapshot')];
            },

            messageId: 'toMatch',
            node: node.callee.property
          });
        } else if (propertyName === 'toThrowErrorMatchingSnapshot') {
          context.report({
            fix(fixer) {
              return [fixer.replaceText(node.callee.property, 'toThrowErrorMatchingInlineSnapshot')];
            },

            messageId: 'toMatchError',
            node: node.callee.property
          });
        }
      }

    };
  }

};
exports.default = _default;