"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("./util");

var _default = {
  meta: {
    docs: {
      description: 'Prefer using toThrow for exception tests',
      uri: (0, _util.getDocsUrl)(__filename)
    },
    messages: {
      noTryExpect: ['Tests should use Jestâ€˜s exception helpers.', 'Use "expect(() => yourFunction()).toThrow()" for synchronous tests,', 'or "await expect(yourFunction()).rejects.toThrow()" for async tests'].join(' ')
    }
  },

  create(context) {
    let isTest = false;
    let catchDepth = 0;

    function isThrowExpectCall(node) {
      return catchDepth > 0 && node.callee.name === 'expect';
    }

    return {
      CallExpression(node) {
        if ((0, _util.isTestCase)(node)) {
          isTest = true;
        } else if (isTest && isThrowExpectCall(node)) {
          context.report({
            messageId: 'noTryExpect',
            node
          });
        }
      },

      CatchClause() {
        if (isTest) {
          ++catchDepth;
        }
      },

      'CatchClause:exit'() {
        if (isTest) {
          --catchDepth;
        }
      },

      'CallExpression:exit'(node) {
        if ((0, _util.isTestCase)(node)) {
          isTest = false;
        }
      }

    };
  }

};
exports.default = _default;