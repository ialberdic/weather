"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("./util");

var _default = {
  meta: {
    docs: {
      url: (0, _util.getDocsUrl)(__filename)
    },
    messages: {
      unexpectedHook: "Unexpected '{{ hookName }}' hook"
    }
  },
  schema: [{
    type: 'object',
    properties: {
      allow: {
        type: 'array',
        contains: ['beforeAll', 'beforeEach', 'afterAll', 'afterEach']
      }
    },
    additionalProperties: false
  }],

  create(context) {
    const whitelistedHookNames = (context.options[0] || {
      allow: []
    }).allow.reduce((hashMap, value) => {
      hashMap[value] = true;
      return hashMap;
    }, Object.create(null));

    const isWhitelisted = node => whitelistedHookNames[node.callee.name];

    return {
      CallExpression(node) {
        if ((0, _util.isHook)(node) && !isWhitelisted(node)) {
          context.report({
            node,
            messageId: 'unexpectedHook',
            data: {
              hookName: node.callee.name
            }
          });
        }
      }

    };
  }

};
exports.default = _default;